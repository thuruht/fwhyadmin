{
  "version": 3,
  "sources": ["../bundle-WQEatu/checked-fetch.js", "../bundle-WQEatu/strip-cf-connecting-ip-header.js", "../../../src/middleware/cors.js", "../../../src/middleware/auth.js", "../../../src/handlers/events.js", "../../../src/handlers/gallery.js", "../../../src/handlers/blog.js", "../../../src/handlers/menu.js", "../../../src/handlers/hours.js", "../../../src/handlers/admin.js", "../../../src/handlers/migration.js", "../../../src/index.js", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-WQEatu/middleware-insertion-facade.js", "../../../../../../../../../usr/local/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-WQEatu/middleware-loader.entry.ts"],
  "sourceRoot": "/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/.wrangler/tmp/dev-hbo0sC",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/**\n * CORS Middleware\n * Handles Cross-Origin Resource Sharing for the unified admin backend\n */\n\nexport function handleCORS(response = null) {\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*', // Will be restricted in production\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n    'Access-Control-Max-Age': '86400', // 24 hours\n  };\n\n  if (response) {\n    // Add CORS headers to existing response\n    Object.entries(corsHeaders).forEach(([key, value]) => {\n      response.headers.set(key, value);\n    });\n    return response;\n  }\n\n  // Return CORS preflight response\n  return new Response(null, {\n    status: 204,\n    headers: corsHeaders\n  });\n}\n\nexport function getRestrictedCORS(env) {\n  const allowedOrigins = env.ALLOWED_ORIGINS?.split(',') || [\n    'https://farewellcafe.com',\n    'https://admin.farewellcafe.com'\n  ];\n\n  return function handleRestrictedCORS(request, response = null) {\n    const origin = request.headers.get('Origin');\n    const isAllowed = allowedOrigins.includes(origin);\n\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': isAllowed ? origin : 'null',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Max-Age': '86400',\n    };\n\n    if (response) {\n      Object.entries(corsHeaders).forEach(([key, value]) => {\n        response.headers.set(key, value);\n      });\n      return response;\n    }\n\n    return new Response(null, {\n      status: 204,\n      headers: corsHeaders\n    });\n  };\n}\n", "/**\n * Authentication Middleware\n * Handles admin authentication for the unified backend\n */\n\nexport async function authenticate(request, env) {\n  try {\n    // Check for session cookie first\n    const sessionToken = getSessionTokenFromRequest(request);\n    if (sessionToken) {\n      const sessionResult = await validateSession(sessionToken, env);\n      if (sessionResult.success) {\n        return sessionResult;\n      }\n    }\n\n    // Fallback to Authorization header for API access\n    const authHeader = request.headers.get('Authorization');\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      const token = authHeader.substring(7);\n      return await validateApiToken(token, env);\n    }\n\n    return { success: false, error: 'No valid authentication provided' };\n\n  } catch (error) {\n    console.error('Auth error:', error);\n    return { success: false, error: 'Authentication failed' };\n  }\n}\n\nasync function validateSession(sessionToken, env) {\n  try {\n    const sessionKey = `session:${sessionToken}`;\n    const sessionData = await env.SESSIONS_KV?.get(sessionKey);\n    \n    if (!sessionData) {\n      return { success: false, error: 'Invalid session' };\n    }\n\n    const session = JSON.parse(sessionData);\n    \n    // Check if session is expired\n    if (session.expires < Date.now()) {\n      await env.SESSIONS_KV?.delete(sessionKey);\n      return { success: false, error: 'Session expired' };\n    }\n\n    return { \n      success: true, \n      user: { \n        id: session.username,\n        username: session.username,\n        role: 'admin',\n        venues: ['farewell', 'howdy'] \n      } \n    };\n\n  } catch (error) {\n    console.error('Session validation error:', error);\n    return { success: false, error: 'Session validation failed' };\n  }\n}\n\nasync function validateApiToken(token, env) {\n  try {\n    // For API access, check stored tokens in KV\n    const tokenKey = `api_token:${token}`;\n    const tokenData = await env.SESSIONS_KV?.get(tokenKey);\n    \n    if (!tokenData) {\n      // Check for hardcoded admin token for development\n      const adminToken = env.ADMIN_API_TOKEN || 'dev-admin-token-2025';\n      if (token === adminToken) {\n        return { \n          success: true, \n          user: { \n            id: 'api-admin',\n            role: 'admin',\n            venues: ['farewell', 'howdy'] \n          } \n        };\n      }\n      \n      return { success: false, error: 'Invalid API token' };\n    }\n\n    const tokenInfo = JSON.parse(tokenData);\n    \n    // Check if token is expired\n    if (tokenInfo.expires && Date.now() > tokenInfo.expires) {\n      await env.SESSIONS_KV?.delete(tokenKey);\n      return { success: false, error: 'API token expired' };\n    }\n\n    return { \n      success: true, \n      user: tokenInfo.user \n    };\n\n  } catch (error) {\n    console.error('API token validation error:', error);\n    return { success: false, error: 'API token validation failed' };\n  }\n}\n\nfunction getSessionTokenFromRequest(request) {\n  const cookieHeader = request.headers.get('Cookie');\n  if (!cookieHeader) return null;\n\n  const cookies = cookieHeader.split(';').reduce((acc, cookie) => {\n    const [key, value] = cookie.trim().split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n\n  return cookies.session || null;\n}\n", "/**\n * Events Handler - Core functionality for events and flyer management\n */\nexport class EventsHandler {\n  constructor(env) {\n    this.env = env;\n    this.kv = env.EVENTS_KV || env.FW_KV;\n    this.r2 = env.R2_BUCKET || env.FW_R2;\n  }\n\n  async handleRequest(request) {\n    const url = new URL(request.url);\n    const method = request.method;\n    const pathname = url.pathname;\n\n    try {\n      // Route based on pathname and method\n      if (pathname.includes('/events/list')) {\n        return await this.listEvents(request);\n      } else if (pathname.includes('/events/slideshow')) {\n        return await this.getSlideshowData(request);\n      } else if (pathname.includes('/events/upload') && method === 'POST') {\n        return await this.uploadEvent(request);\n      } else if (pathname.includes('/events/create') && method === 'POST') {\n        return await this.createEvent(request);\n      } else if (pathname.includes('/events/update') && method === 'PUT') {\n        return await this.updateEvent(request);\n      } else if (pathname.includes('/events/delete') && method === 'DELETE') {\n        return await this.deleteEvent(request);\n      } else if (pathname.includes('/events/reorder') && method === 'POST') {\n        return await this.reorderSlideshow(request);\n      } else {\n        return new Response('Not Found', { status: 404 });\n      }\n    } catch (error) {\n      console.error('Events handler error:', error);\n      return new Response(\n        JSON.stringify({ error: 'Operation failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // List events with unified format\n  async listEvents(request) {\n    const url = new URL(request.url);\n    const venue = url.searchParams.get('venue') || 'all';\n    const limit = parseInt(url.searchParams.get('limit')) || 50;\n    const includeThumbnails = url.searchParams.get('thumbnails') === 'true';\n\n    try {\n      // Get all events from KV\n      const eventsKey = 'events:all';\n      const eventsData = await this.kv.get(eventsKey);\n      \n      let events = [];\n      if (eventsData) {\n        events = JSON.parse(eventsData);\n      }\n\n      // Filter by venue if specified\n      if (venue !== 'all') {\n        events = events.filter(event => \n          event.venue && event.venue.toLowerCase() === venue.toLowerCase()\n        );\n      }\n\n      // Sort by date (upcoming first)\n      const now = new Date();\n      events.sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        return dateA - dateB;\n      });\n\n      // Limit results\n      events = events.slice(0, limit);\n\n      // Enhance with display data\n      events = events.map(event => ({\n        ...event,\n        venue_display: this.getVenueDisplay(event.venue),\n        date_formatted: this.formatDate(event.date),\n        thumbnail_url: includeThumbnails ? (event.thumbnail_url || this.getDefaultThumbnail(event.venue)) : undefined,\n        age_restriction: event.age_restriction || this.getDefaultAgeRestriction(event.venue),\n        default_time: event.time || this.getDefaultTime(event.venue)\n      }));\n\n      return new Response(\n        JSON.stringify({ \n          events, \n          total: events.length,\n          venue: venue,\n          timestamp: new Date().toISOString()\n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n    } catch (error) {\n      console.error('Error listing events:', error);\n      return new Response(\n        JSON.stringify({ error: 'Failed to list events' }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Get slideshow data for venue-specific flyer carousel\n  async getSlideshowData(request) {\n    const url = new URL(request.url);\n    const venue = url.searchParams.get('venue') || 'farewell';\n\n    try {\n      // Get slideshow order from KV\n      const slideshowKey = `slideshow:${venue}`;\n      const slideshowData = await this.kv.get(slideshowKey);\n      \n      let slideshow = [];\n      if (slideshowData) {\n        slideshow = JSON.parse(slideshowData);\n      } else {\n        // If no custom order, get recent events for this venue\n        const eventsData = await this.kv.get('events:all');\n        if (eventsData) {\n          const allEvents = JSON.parse(eventsData);\n          slideshow = allEvents\n            .filter(event => event.venue && event.venue.toLowerCase() === venue.toLowerCase())\n            .filter(event => event.flyer_url || event.image_url)\n            .sort((a, b) => new Date(b.date) - new Date(a.date))\n            .slice(0, 20) // Max 20 slides\n            .map(event => ({\n              id: event.id,\n              title: event.title,\n              date: event.date,\n              image_url: event.flyer_url || event.image_url,\n              thumbnail_url: event.thumbnail_url,\n              venue: event.venue,\n              order: 0\n            }));\n        }\n      }\n\n      return new Response(\n        JSON.stringify({ \n          slideshow, \n          venue,\n          total: slideshow.length \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n    } catch (error) {\n      console.error('Error getting slideshow data:', error);\n      return new Response(\n        JSON.stringify({ error: 'Failed to get slideshow data' }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Upload event with flyer\n  async uploadEvent(request) {\n    try {\n      const formData = await request.formData();\n      const file = formData.get('flyer');\n      const eventData = {\n        title: formData.get('title'),\n        date: formData.get('date'),\n        time: formData.get('time'),\n        venue: formData.get('venue'),\n        age_restriction: formData.get('age_restriction'),\n        price: formData.get('price'),\n        description: formData.get('description'),\n        ticket_url: formData.get('ticket_url')\n      };\n\n      // Validate required fields\n      if (!eventData.title || !eventData.date || !eventData.venue) {\n        return new Response(\n          JSON.stringify({ error: 'Missing required fields: title, date, venue' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Auto-populate venue defaults\n      eventData.age_restriction = eventData.age_restriction || this.getDefaultAgeRestriction(eventData.venue);\n      eventData.time = eventData.time || this.getDefaultTime(eventData.venue);\n\n      // Generate unique ID\n      const eventId = `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      eventData.id = eventId;\n      eventData.created_at = new Date().toISOString();\n\n      let flyerUrl = null;\n      let thumbnailUrl = null;\n\n      // Upload flyer if provided\n      if (file && file.size > 0) {\n        const fileExtension = file.name.split('.').pop().toLowerCase();\n        const allowedTypes = ['jpg', 'jpeg', 'png', 'gif', 'webp'];\n        \n        if (!allowedTypes.includes(fileExtension)) {\n          return new Response(\n            JSON.stringify({ error: 'Invalid file type. Use JPG, PNG, GIF, or WebP' }), \n            { status: 400, headers: { 'Content-Type': 'application/json' } }\n          );\n        }\n\n        // Upload to R2\n        const fileName = `flyers/${eventId}.${fileExtension}`;\n        const thumbnailName = `thumbnails/${eventId}_thumb.${fileExtension}`;\n        \n        await this.r2.put(fileName, file.stream(), {\n          httpMetadata: { contentType: file.type }\n        });\n\n        // Create thumbnail (simplified - in production you'd resize the image)\n        await this.r2.put(thumbnailName, file.stream(), {\n          httpMetadata: { contentType: file.type }\n        });\n\n        flyerUrl = `https://your-r2-domain.com/${fileName}`;\n        thumbnailUrl = `https://your-r2-domain.com/${thumbnailName}`;\n      }\n\n      eventData.flyer_url = flyerUrl;\n      eventData.thumbnail_url = thumbnailUrl;\n\n      // Save event\n      const saveResult = await this.saveEvent(eventData);\n      \n      if (saveResult.success) {\n        return new Response(\n          JSON.stringify({ \n            success: true, \n            event: eventData,\n            message: 'Event uploaded successfully' \n          }), \n          { headers: { 'Content-Type': 'application/json' } }\n        );\n      } else {\n        return new Response(\n          JSON.stringify({ error: 'Failed to save event' }), \n          { status: 500, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n    } catch (error) {\n      console.error('Error uploading event:', error);\n      return new Response(\n        JSON.stringify({ error: 'Upload failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Create event without flyer upload\n  async createEvent(request) {\n    try {\n      const eventData = await request.json();\n\n      // Validate required fields\n      if (!eventData.title || !eventData.date || !eventData.venue) {\n        return new Response(\n          JSON.stringify({ error: 'Missing required fields: title, date, venue' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Auto-populate venue defaults\n      eventData.age_restriction = eventData.age_restriction || this.getDefaultAgeRestriction(eventData.venue);\n      eventData.time = eventData.time || this.getDefaultTime(eventData.venue);\n\n      // Generate unique ID\n      eventData.id = `event_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      eventData.created_at = new Date().toISOString();\n\n      // Save event\n      const saveResult = await this.saveEvent(eventData);\n      \n      if (saveResult.success) {\n        return new Response(\n          JSON.stringify({ \n            success: true, \n            event: eventData,\n            message: 'Event created successfully' \n          }), \n          { headers: { 'Content-Type': 'application/json' } }\n        );\n      } else {\n        return new Response(\n          JSON.stringify({ error: 'Failed to save event' }), \n          { status: 500, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n    } catch (error) {\n      console.error('Error creating event:', error);\n      return new Response(\n        JSON.stringify({ error: 'Creation failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Update existing event\n  async updateEvent(request) {\n    try {\n      const url = new URL(request.url);\n      const eventId = url.searchParams.get('id');\n      \n      if (!eventId) {\n        return new Response(\n          JSON.stringify({ error: 'Event ID required' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      const updateData = await request.json();\n      \n      // Get existing events\n      const eventsData = await this.kv.get('events:all');\n      let events = eventsData ? JSON.parse(eventsData) : [];\n      \n      // Find and update event\n      const eventIndex = events.findIndex(event => event.id === eventId);\n      if (eventIndex === -1) {\n        return new Response(\n          JSON.stringify({ error: 'Event not found' }), \n          { status: 404, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Update event data\n      events[eventIndex] = {\n        ...events[eventIndex],\n        ...updateData,\n        updated_at: new Date().toISOString()\n      };\n\n      // Save back to KV\n      await this.kv.put('events:all', JSON.stringify(events));\n      \n      return new Response(\n        JSON.stringify({ \n          success: true, \n          event: events[eventIndex],\n          message: 'Event updated successfully' \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n    } catch (error) {\n      console.error('Error updating event:', error);\n      return new Response(\n        JSON.stringify({ error: 'Update failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Delete event\n  async deleteEvent(request) {\n    try {\n      const url = new URL(request.url);\n      const eventId = url.searchParams.get('id');\n      \n      if (!eventId) {\n        return new Response(\n          JSON.stringify({ error: 'Event ID required' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Get existing events\n      const eventsData = await this.kv.get('events:all');\n      let events = eventsData ? JSON.parse(eventsData) : [];\n      \n      // Find event to delete\n      const eventIndex = events.findIndex(event => event.id === eventId);\n      if (eventIndex === -1) {\n        return new Response(\n          JSON.stringify({ error: 'Event not found' }), \n          { status: 404, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      const deletedEvent = events[eventIndex];\n      \n      // Remove from array\n      events.splice(eventIndex, 1);\n\n      // Save back to KV\n      await this.kv.put('events:all', JSON.stringify(events));\n\n      // TODO: Also delete flyer files from R2 if they exist\n      if (deletedEvent.flyer_url) {\n        // Delete flyer and thumbnail from R2\n        // This would require extracting the file path from the URL\n      }\n      \n      return new Response(\n        JSON.stringify({ \n          success: true, \n          message: 'Event deleted successfully' \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n    } catch (error) {\n      console.error('Error deleting event:', error);\n      return new Response(\n        JSON.stringify({ error: 'Deletion failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Reorder slideshow\n  async reorderSlideshow(request) {\n    try {\n      const { venue, slideshow } = await request.json();\n      \n      if (!venue || !slideshow) {\n        return new Response(\n          JSON.stringify({ error: 'Venue and slideshow data required' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Save slideshow order\n      const slideshowKey = `slideshow:${venue}`;\n      await this.kv.put(slideshowKey, JSON.stringify(slideshow));\n      \n      return new Response(\n        JSON.stringify({ \n          success: true, \n          message: 'Slideshow order updated successfully' \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n    } catch (error) {\n      console.error('Error reordering slideshow:', error);\n      return new Response(\n        JSON.stringify({ error: 'Reorder failed', details: error.message }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n  }\n\n  // Helper Methods\n\n  async saveEvent(eventData) {\n    try {\n      // Get existing events\n      const eventsData = await this.kv.get('events:all');\n      let events = eventsData ? JSON.parse(eventsData) : [];\n      \n      // Add new event\n      events.push(eventData);\n      \n      // Sort by date\n      events.sort((a, b) => new Date(a.date) - new Date(b.date));\n      \n      // Save back to KV\n      await this.kv.put('events:all', JSON.stringify(events));\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Error saving event:', error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  getVenueDisplay(venue) {\n    const venues = {\n      'farewell': 'Farewell Cafe',\n      'howdy': 'Howdy Thrift',\n      'both': 'Both Venues'\n    };\n    return venues[venue?.toLowerCase()] || venue || 'Unknown Venue';\n  }\n\n  getDefaultAgeRestriction(venue) {\n    const defaults = {\n      'farewell': '21+ unless with parent or legal guardian',\n      'howdy': 'All ages'\n    };\n    return defaults[venue?.toLowerCase()] || 'All ages';\n  }\n\n  getDefaultTime(venue) {\n    return 'Doors at 7pm / Music at 8pm';\n  }\n\n  getDefaultThumbnail(venue) {\n    const defaults = {\n      'farewell': '/img/fwcal.png',\n      'howdy': '/img/hycal.png'\n    };\n    return defaults[venue?.toLowerCase()] || '/img/placeholder.png';\n  }\n\n  formatDate(dateString) {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    } catch (error) {\n      return dateString;\n    }\n  }\n\n  formatTime(timeString) {\n    try {\n      if (!timeString) return '';\n      // Simple time formatting - could be enhanced\n      return timeString;\n    } catch (error) {\n      return timeString;\n    }\n  }\n}\n", "/**\n * Gallery Handler\n * Manages flyer images and gallery functionality\n */\n\nexport async function handleGallery(request, env, action) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  try {\n    switch (action) {\n      case 'list':\n        return await listGalleryItems(request, env);\n      case 'upload':\n        return await uploadGalleryItem(request, env);\n      case 'delete':\n        return await deleteGalleryItem(request, env);\n      case 'flyer':\n        return await serveFlyer(request, env);\n      default:\n        return new Response(\n          JSON.stringify({ error: 'Unknown action' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n  } catch (error) {\n    console.error('Gallery handler error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Gallery operation failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function listGalleryItems(request, env) {\n  const url = new URL(request.url);\n  const venue = url.searchParams.get('venue') || 'all';\n  const limit = parseInt(url.searchParams.get('limit')) || 50;\n  const offset = parseInt(url.searchParams.get('offset')) || 0;\n\n  try {\n    // List all flyer keys\n    const flyerKeys = await env.GALLERY_KV.list({ prefix: 'flyers:' });\n    \n    let flyers = [];\n    \n    // Get flyer metadata\n    for (const key of flyerKeys.keys) {\n      try {\n        const metadata = await env.GALLERY_KV.getWithMetadata(key.name);\n        if (metadata.metadata) {\n          const flyerInfo = {\n            filename: key.name.replace('flyers:', ''),\n            ...metadata.metadata,\n            url: `/api/gallery/flyer/${key.name.replace('flyers:', '')}`,\n            size: key.size\n          };\n          \n          // Filter by venue if specified\n          if (venue === 'all' || flyerInfo.venue === venue) {\n            flyers.push(flyerInfo);\n          }\n        }\n      } catch (error) {\n        console.error('Error getting flyer metadata:', error);\n      }\n    }\n\n    // Sort by upload date (newest first)\n    flyers.sort((a, b) => new Date(b.uploaded) - new Date(a.uploaded));\n\n    // Apply pagination\n    const paginatedFlyers = flyers.slice(offset, offset + limit);\n\n    return new Response(\n      JSON.stringify({\n        flyers: paginatedFlyers,\n        total: flyers.length,\n        offset,\n        limit\n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('List gallery items error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to list gallery items' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function uploadGalleryItem(request, env) {\n  try {\n    const formData = await request.formData();\n    const file = formData.get('file');\n    const venue = formData.get('venue') || 'farewell';\n    const title = formData.get('title') || '';\n    const description = formData.get('description') || '';\n\n    if (!file) {\n      return new Response(\n        JSON.stringify({ error: 'No file provided' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Validate file type\n    const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n    if (!allowedTypes.includes(file.type)) {\n      return new Response(\n        JSON.stringify({ error: 'Invalid file type. Only images are allowed.' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Validate file size (max 10MB)\n    const maxSize = 10 * 1024 * 1024; // 10MB\n    if (file.size > maxSize) {\n      return new Response(\n        JSON.stringify({ error: 'File too large. Maximum size is 10MB.' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Generate unique filename\n    const timestamp = Date.now();\n    const sanitizedOriginalName = file.name.replace(/[^a-zA-Z0-9.-]/g, '_');\n    const filename = `${venue}-${timestamp}-${sanitizedOriginalName}`;\n    \n    // Store file with metadata\n    const fileBuffer = await file.arrayBuffer();\n    const metadata = {\n      venue,\n      title,\n      description,\n      originalName: file.name,\n      mimeType: file.type,\n      size: file.size,\n      uploaded: new Date().toISOString()\n    };\n\n    await env.GALLERY_KV.put(`flyers:${filename}`, fileBuffer, {\n      metadata: metadata\n    });\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        filename,\n        url: `/api/gallery/flyer/${filename}`,\n        metadata,\n        message: 'File uploaded successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Upload gallery item error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to upload file' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function deleteGalleryItem(request, env) {\n  try {\n    const url = new URL(request.url);\n    const filename = url.searchParams.get('filename');\n\n    if (!filename) {\n      return new Response(\n        JSON.stringify({ error: 'Filename required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const key = `flyers:${filename}`;\n    \n    // Check if file exists\n    const existingFile = await env.GALLERY_KV.get(key);\n    if (!existingFile) {\n      return new Response(\n        JSON.stringify({ error: 'File not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Delete the file\n    await env.GALLERY_KV.delete(key);\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        message: 'File deleted successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Delete gallery item error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to delete file' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function serveFlyer(request, env) {\n  try {\n    const url = new URL(request.url);\n    const pathParts = url.pathname.split('/');\n    const filename = pathParts[pathParts.length - 1];\n\n    if (!filename) {\n      return new Response('Filename required', { status: 400 });\n    }\n\n    const key = `flyers:${filename}`;\n    const fileData = await env.GALLERY_KV.getWithMetadata(key, 'arrayBuffer');\n    \n    if (!fileData.value) {\n      return new Response('File not found', { status: 404 });\n    }\n\n    const headers = {\n      'Content-Type': fileData.metadata?.mimeType || 'image/jpeg',\n      'Cache-Control': 'public, max-age=31536000', // 1 year cache\n      'Content-Length': fileData.value.byteLength.toString()\n    };\n\n    return new Response(fileData.value, { headers });\n\n  } catch (error) {\n    console.error('Serve flyer error:', error);\n    return new Response('Failed to serve file', { status: 500 });\n  }\n}\n", "/**\n * Blog Handler\n * Manages newsletter posts and blog functionality\n */\n\nexport async function handleBlog(request, env, action) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  try {\n    switch (action) {\n      case 'public':\n        return await getPublicPosts(request, env);\n      case 'list':\n        return await listPosts(request, env);\n      case 'create':\n        return await createPost(request, env);\n      case 'update':\n        return await updatePost(request, env);\n      case 'delete':\n        return await deletePost(request, env);\n      case 'publish':\n        return await publishPost(request, env);\n      case 'featured':\n        return await manageFeatured(request, env);\n      default:\n        return new Response(\n          JSON.stringify({ error: 'Unknown action' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n  } catch (error) {\n    console.error('Blog handler error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Blog operation failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function getPublicPosts(request, env) {\n  const url = new URL(request.url);\n  const limit = parseInt(url.searchParams.get('limit')) || 10;\n  const offset = parseInt(url.searchParams.get('offset')) || 0;\n  const type = url.searchParams.get('type') || 'all'; // 'posts', 'featured', 'all'\n\n  try {\n    const postsData = await env.BLOG_KV.get('blog:posts');\n    const featuredData = await env.BLOG_KV.get('blog:featured');\n\n    let posts = [];\n    let featured = null;\n\n    if (postsData) {\n      const allPosts = JSON.parse(postsData);\n      // Only return published posts for public API\n      posts = allPosts.filter(post => post.status === 'published');\n      \n      // Sort by publish date (newest first)\n      posts.sort((a, b) => new Date(b.publishedAt) - new Date(a.publishedAt));\n      \n      // Apply pagination\n      posts = posts.slice(offset, offset + limit);\n    }\n\n    if (featuredData && (type === 'featured' || type === 'all')) {\n      const featuredPost = JSON.parse(featuredData);\n      if (featuredPost.status === 'published') {\n        featured = featuredPost;\n      }\n    }\n\n    const response = {\n      posts: type === 'featured' ? [] : posts,\n      featured: type === 'posts' ? null : featured,\n      total: posts.length,\n      offset,\n      limit\n    };\n\n    return new Response(\n      JSON.stringify(response), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Get public posts error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to fetch posts' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function listPosts(request, env) {\n  const url = new URL(request.url);\n  const limit = parseInt(url.searchParams.get('limit')) || 50;\n  const offset = parseInt(url.searchParams.get('offset')) || 0;\n  const status = url.searchParams.get('status'); // 'draft', 'published', 'archived'\n\n  try {\n    const postsData = await env.BLOG_KV.get('blog:posts');\n    \n    if (!postsData) {\n      return new Response(\n        JSON.stringify({ posts: [], total: 0 }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    let posts = JSON.parse(postsData);\n    \n    // Filter by status if specified\n    if (status) {\n      posts = posts.filter(post => post.status === status);\n    }\n\n    // Sort by created date (newest first)\n    posts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n\n    // Apply pagination\n    const paginatedPosts = posts.slice(offset, offset + limit);\n\n    return new Response(\n      JSON.stringify({\n        posts: paginatedPosts,\n        total: posts.length,\n        offset,\n        limit\n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('List posts error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to list posts' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function createPost(request, env) {\n  try {\n    const postData = await request.json();\n    const { title, content, excerpt, status } = postData;\n\n    if (!title || !content) {\n      return new Response(\n        JSON.stringify({ error: 'Title and content required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const post = {\n      id: crypto.randomUUID(),\n      title,\n      content,\n      excerpt: excerpt || content.substring(0, 200) + '...',\n      status: status || 'draft',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      publishedAt: status === 'published' ? new Date().toISOString() : null\n    };\n\n    // Get existing posts\n    const existingData = await env.BLOG_KV.get('blog:posts');\n    const posts = existingData ? JSON.parse(existingData) : [];\n    \n    posts.push(post);\n    \n    await env.BLOG_KV.put('blog:posts', JSON.stringify(posts));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        post,\n        message: 'Post created successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Create post error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to create post' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function updatePost(request, env) {\n  try {\n    const postData = await request.json();\n    const { id, title, content, excerpt, status } = postData;\n\n    if (!id) {\n      return new Response(\n        JSON.stringify({ error: 'Post ID required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const existingData = await env.BLOG_KV.get('blog:posts');\n    if (!existingData) {\n      return new Response(\n        JSON.stringify({ error: 'Posts not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const posts = JSON.parse(existingData);\n    const postIndex = posts.findIndex(post => post.id === id);\n    \n    if (postIndex === -1) {\n      return new Response(\n        JSON.stringify({ error: 'Post not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Update post\n    const existingPost = posts[postIndex];\n    posts[postIndex] = {\n      ...existingPost,\n      title: title || existingPost.title,\n      content: content || existingPost.content,\n      excerpt: excerpt || existingPost.excerpt,\n      status: status || existingPost.status,\n      updatedAt: new Date().toISOString(),\n      publishedAt: (status === 'published' && !existingPost.publishedAt) \n        ? new Date().toISOString() \n        : existingPost.publishedAt\n    };\n    \n    await env.BLOG_KV.put('blog:posts', JSON.stringify(posts));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        post: posts[postIndex],\n        message: 'Post updated successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Update post error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to update post' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function deletePost(request, env) {\n  try {\n    const url = new URL(request.url);\n    const postId = url.searchParams.get('id');\n\n    if (!postId) {\n      return new Response(\n        JSON.stringify({ error: 'Post ID required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const existingData = await env.BLOG_KV.get('blog:posts');\n    if (!existingData) {\n      return new Response(\n        JSON.stringify({ error: 'Posts not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const posts = JSON.parse(existingData);\n    const filteredPosts = posts.filter(post => post.id !== postId);\n    \n    if (filteredPosts.length === posts.length) {\n      return new Response(\n        JSON.stringify({ error: 'Post not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    await env.BLOG_KV.put('blog:posts', JSON.stringify(filteredPosts));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        message: 'Post deleted successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Delete post error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to delete post' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function publishPost(request, env) {\n  try {\n    const url = new URL(request.url);\n    const postId = url.searchParams.get('id');\n\n    if (!postId) {\n      return new Response(\n        JSON.stringify({ error: 'Post ID required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const existingData = await env.BLOG_KV.get('blog:posts');\n    if (!existingData) {\n      return new Response(\n        JSON.stringify({ error: 'Posts not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const posts = JSON.parse(existingData);\n    const postIndex = posts.findIndex(post => post.id === postId);\n    \n    if (postIndex === -1) {\n      return new Response(\n        JSON.stringify({ error: 'Post not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Publish post\n    posts[postIndex].status = 'published';\n    posts[postIndex].publishedAt = new Date().toISOString();\n    posts[postIndex].updatedAt = new Date().toISOString();\n    \n    await env.BLOG_KV.put('blog:posts', JSON.stringify(posts));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        post: posts[postIndex],\n        message: 'Post published successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Publish post error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to publish post' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function manageFeatured(request, env) {\n  const method = request.method;\n\n  try {\n    if (method === 'GET') {\n      const featuredData = await env.BLOG_KV.get('blog:featured');\n      const featured = featuredData ? JSON.parse(featuredData) : null;\n\n      return new Response(\n        JSON.stringify({ featured }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    if (method === 'POST') {\n      const { postId } = await request.json();\n\n      if (!postId) {\n        return new Response(\n          JSON.stringify({ error: 'Post ID required' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Get the post to feature\n      const postsData = await env.BLOG_KV.get('blog:posts');\n      if (!postsData) {\n        return new Response(\n          JSON.stringify({ error: 'Posts not found' }), \n          { status: 404, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      const posts = JSON.parse(postsData);\n      const post = posts.find(p => p.id === postId);\n\n      if (!post) {\n        return new Response(\n          JSON.stringify({ error: 'Post not found' }), \n          { status: 404, headers: { 'Content-Type': 'application/json' } }\n        );\n      }\n\n      // Set as featured\n      await env.BLOG_KV.put('blog:featured', JSON.stringify(post));\n\n      return new Response(\n        JSON.stringify({ \n          success: true, \n          featured: post,\n          message: 'Post set as featured' \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    if (method === 'DELETE') {\n      await env.BLOG_KV.delete('blog:featured');\n\n      return new Response(\n        JSON.stringify({ \n          success: true, \n          message: 'Featured post removed' \n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    return new Response(\n      JSON.stringify({ error: 'Method not allowed' }), \n      { status: 405, headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Manage featured error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to manage featured post' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n", "/**\n * Menu Handler\n * Manages drink menu and food menu for both venues\n */\n\nexport async function handleMenu(request, env, action) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  try {\n    switch (action) {\n      case 'public':\n      case 'get':\n        return await getMenu(request, env);\n      case 'update':\n        return await updateMenu(request, env);\n      case 'add-item':\n        return await addMenuItem(request, env);\n      case 'remove-item':\n        return await removeMenuItem(request, env);\n      case 'reorder':\n        return await reorderMenu(request, env);\n      default:\n        return new Response(\n          JSON.stringify({ error: 'Unknown action' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n  } catch (error) {\n    console.error('Menu handler error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Menu operation failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function getMenu(request, env) {\n  const url = new URL(request.url);\n  const venue = url.searchParams.get('venue') || 'farewell';\n  const type = url.searchParams.get('type') || 'drinks'; // drinks, food, specials\n\n  try {\n    const menuKey = `menu:${venue}:${type}`;\n    const menuData = await env.CONFIG_KV.get(menuKey);\n    \n    if (!menuData) {\n      // Return default menu structure\n      const defaultMenu = getDefaultMenu(venue, type);\n      return new Response(\n        JSON.stringify({ menu: defaultMenu }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menu = JSON.parse(menuData);\n    \n    return new Response(\n      JSON.stringify({ menu }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Get menu error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to fetch menu' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function updateMenu(request, env) {\n  try {\n    const menuData = await request.json();\n    const { venue, type, menu } = menuData;\n\n    if (!venue || !type || !menu) {\n      return new Response(\n        JSON.stringify({ error: 'Venue, type, and menu data required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menuKey = `menu:${venue}:${type}`;\n    \n    // Add metadata\n    const menuWithMeta = {\n      ...menu,\n      venue,\n      type,\n      lastUpdated: new Date().toISOString(),\n      version: (menu.version || 0) + 1\n    };\n\n    await env.CONFIG_KV.put(menuKey, JSON.stringify(menuWithMeta));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        menu: menuWithMeta,\n        message: 'Menu updated successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Update menu error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to update menu' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function addMenuItem(request, env) {\n  try {\n    const itemData = await request.json();\n    const { venue, type, category, item } = itemData;\n\n    if (!venue || !type || !category || !item) {\n      return new Response(\n        JSON.stringify({ error: 'Venue, type, category, and item data required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menuKey = `menu:${venue}:${type}`;\n    const menuData = await env.CONFIG_KV.get(menuKey);\n    \n    let menu;\n    if (menuData) {\n      menu = JSON.parse(menuData);\n    } else {\n      menu = getDefaultMenu(venue, type);\n    }\n\n    // Add item to category\n    if (!menu.categories) {\n      menu.categories = {};\n    }\n    \n    if (!menu.categories[category]) {\n      menu.categories[category] = {\n        name: category,\n        items: [],\n        order: Object.keys(menu.categories).length\n      };\n    }\n\n    // Add unique ID to item\n    const newItem = {\n      ...item,\n      id: crypto.randomUUID(),\n      created: new Date().toISOString()\n    };\n\n    menu.categories[category].items.push(newItem);\n    menu.lastUpdated = new Date().toISOString();\n    menu.version = (menu.version || 0) + 1;\n\n    await env.CONFIG_KV.put(menuKey, JSON.stringify(menu));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        item: newItem,\n        menu,\n        message: 'Menu item added successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Add menu item error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to add menu item' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function removeMenuItem(request, env) {\n  try {\n    const url = new URL(request.url);\n    const venue = url.searchParams.get('venue');\n    const type = url.searchParams.get('type');\n    const category = url.searchParams.get('category');\n    const itemId = url.searchParams.get('itemId');\n\n    if (!venue || !type || !category || !itemId) {\n      return new Response(\n        JSON.stringify({ error: 'Venue, type, category, and itemId required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menuKey = `menu:${venue}:${type}`;\n    const menuData = await env.CONFIG_KV.get(menuKey);\n    \n    if (!menuData) {\n      return new Response(\n        JSON.stringify({ error: 'Menu not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menu = JSON.parse(menuData);\n    \n    if (!menu.categories || !menu.categories[category]) {\n      return new Response(\n        JSON.stringify({ error: 'Category not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Remove item\n    menu.categories[category].items = menu.categories[category].items.filter(\n      item => item.id !== itemId\n    );\n\n    menu.lastUpdated = new Date().toISOString();\n    menu.version = (menu.version || 0) + 1;\n\n    await env.CONFIG_KV.put(menuKey, JSON.stringify(menu));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        menu,\n        message: 'Menu item removed successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Remove menu item error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to remove menu item' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function reorderMenu(request, env) {\n  try {\n    const reorderData = await request.json();\n    const { venue, type, categoryOrder, itemOrders } = reorderData;\n\n    if (!venue || !type) {\n      return new Response(\n        JSON.stringify({ error: 'Venue and type required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menuKey = `menu:${venue}:${type}`;\n    const menuData = await env.CONFIG_KV.get(menuKey);\n    \n    if (!menuData) {\n      return new Response(\n        JSON.stringify({ error: 'Menu not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const menu = JSON.parse(menuData);\n\n    // Update category order\n    if (categoryOrder && Array.isArray(categoryOrder)) {\n      categoryOrder.forEach((categoryName, index) => {\n        if (menu.categories[categoryName]) {\n          menu.categories[categoryName].order = index;\n        }\n      });\n    }\n\n    // Update item orders within categories\n    if (itemOrders) {\n      Object.entries(itemOrders).forEach(([categoryName, itemOrder]) => {\n        if (menu.categories[categoryName] && Array.isArray(itemOrder)) {\n          // Reorder items based on provided order\n          const reorderedItems = [];\n          itemOrder.forEach(itemId => {\n            const item = menu.categories[categoryName].items.find(i => i.id === itemId);\n            if (item) {\n              reorderedItems.push(item);\n            }\n          });\n          menu.categories[categoryName].items = reorderedItems;\n        }\n      });\n    }\n\n    menu.lastUpdated = new Date().toISOString();\n    menu.version = (menu.version || 0) + 1;\n\n    await env.CONFIG_KV.put(menuKey, JSON.stringify(menu));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        menu,\n        message: 'Menu reordered successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Reorder menu error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to reorder menu' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nfunction getDefaultMenu(venue, type) {\n  const baseMenu = {\n    venue,\n    type,\n    categories: {},\n    created: new Date().toISOString(),\n    version: 1\n  };\n\n  if (type === 'drinks') {\n    return {\n      ...baseMenu,\n      categories: {\n        cocktails: {\n          name: 'Cocktails',\n          order: 0,\n          items: []\n        },\n        beer: {\n          name: 'Beer',\n          order: 1,\n          items: []\n        },\n        wine: {\n          name: 'Wine',\n          order: 2,\n          items: []\n        },\n        nonalcoholic: {\n          name: 'Non-Alcoholic',\n          order: 3,\n          items: [\n            {\n              id: 'arizona-iced-tea',\n              name: 'AriZona Iced Tea',\n              price: '$2.50',\n              description: 'Classic AriZona Iced Tea',\n              available: true,\n              order: 0\n            }\n          ]\n        }\n      }\n    };\n  }\n\n  if (type === 'food') {\n    return {\n      ...baseMenu,\n      categories: {\n        appetizers: {\n          name: 'Appetizers',\n          order: 0,\n          items: []\n        },\n        mains: {\n          name: 'Main Dishes',\n          order: 1,\n          items: []\n        },\n        desserts: {\n          name: 'Desserts',\n          order: 2,\n          items: []\n        }\n      }\n    };\n  }\n\n  return baseMenu;\n}\n", "/**\n * Operating Hours Handler\n * Manages operating hours, special hours, and closures for both venues\n */\n\nexport async function handleHours(request, env, action) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  try {\n    switch (action) {\n      case 'public':\n      case 'get':\n        return await getHours(request, env);\n      case 'update':\n        return await updateHours(request, env);\n      case 'set-special':\n        return await setSpecialHours(request, env);\n      case 'remove-special':\n        return await removeSpecialHours(request, env);\n      case 'set-closure':\n        return await setClosure(request, env);\n      case 'remove-closure':\n        return await removeClosure(request, env);\n      default:\n        return new Response(\n          JSON.stringify({ error: 'Unknown action' }), \n          { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n  } catch (error) {\n    console.error('Hours handler error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Hours operation failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function getHours(request, env) {\n  const url = new URL(request.url);\n  const venue = url.searchParams.get('venue') || 'farewell';\n  const date = url.searchParams.get('date'); // YYYY-MM-DD format for specific date\n  const range = url.searchParams.get('range'); // number of days to get\n\n  try {\n    const hoursKey = `hours:${venue}`;\n    const hoursData = await env.CONFIG_KV.get(hoursKey);\n    \n    let hours;\n    if (!hoursData) {\n      hours = getDefaultHours(venue);\n    } else {\n      hours = JSON.parse(hoursData);\n    }\n\n    // If specific date requested, calculate hours for that date\n    if (date) {\n      const dateHours = calculateHoursForDate(hours, date);\n      return new Response(\n        JSON.stringify({ \n          venue,\n          date,\n          hours: dateHours,\n          isOpen: isVenueOpen(dateHours),\n          nextOpenTime: getNextOpenTime(hours, date)\n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // If range requested, get hours for multiple days\n    if (range) {\n      const rangeHours = calculateHoursForRange(hours, parseInt(range));\n      return new Response(\n        JSON.stringify({ \n          venue,\n          range: parseInt(range),\n          hours: rangeHours\n        }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Return full hours configuration\n    return new Response(\n      JSON.stringify({ \n        venue,\n        hours: hours.regular,\n        specialHours: hours.special,\n        closures: hours.closures,\n        timezone: hours.timezone\n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Get hours error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to fetch hours' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function updateHours(request, env) {\n  try {\n    const hoursData = await request.json();\n    const { venue, regular } = hoursData;\n\n    if (!venue || !regular) {\n      return new Response(\n        JSON.stringify({ error: 'Venue and regular hours required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const hoursKey = `hours:${venue}`;\n    const existingData = await env.CONFIG_KV.get(hoursKey);\n    \n    let hours;\n    if (existingData) {\n      hours = JSON.parse(existingData);\n    } else {\n      hours = getDefaultHours(venue);\n    }\n\n    // Update regular hours\n    hours.regular = {\n      ...hours.regular,\n      ...regular\n    };\n    \n    hours.lastUpdated = new Date().toISOString();\n    hours.version = (hours.version || 0) + 1;\n\n    await env.CONFIG_KV.put(hoursKey, JSON.stringify(hours));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        hours,\n        message: 'Operating hours updated successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Update hours error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to update hours' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function setSpecialHours(request, env) {\n  try {\n    const specialData = await request.json();\n    const { venue, date, hours, reason } = specialData;\n\n    if (!venue || !date || !hours) {\n      return new Response(\n        JSON.stringify({ error: 'Venue, date, and hours required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const hoursKey = `hours:${venue}`;\n    const existingData = await env.CONFIG_KV.get(hoursKey);\n    \n    let venueHours;\n    if (existingData) {\n      venueHours = JSON.parse(existingData);\n    } else {\n      venueHours = getDefaultHours(venue);\n    }\n\n    // Add special hours\n    if (!venueHours.special) {\n      venueHours.special = {};\n    }\n\n    venueHours.special[date] = {\n      open: hours.open,\n      close: hours.close,\n      reason: reason || 'Special hours',\n      created: new Date().toISOString()\n    };\n    \n    venueHours.lastUpdated = new Date().toISOString();\n    venueHours.version = (venueHours.version || 0) + 1;\n\n    await env.CONFIG_KV.put(hoursKey, JSON.stringify(venueHours));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        specialHours: venueHours.special[date],\n        message: 'Special hours set successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Set special hours error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to set special hours' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function removeSpecialHours(request, env) {\n  try {\n    const url = new URL(request.url);\n    const venue = url.searchParams.get('venue');\n    const date = url.searchParams.get('date');\n\n    if (!venue || !date) {\n      return new Response(\n        JSON.stringify({ error: 'Venue and date required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const hoursKey = `hours:${venue}`;\n    const existingData = await env.CONFIG_KV.get(hoursKey);\n    \n    if (!existingData) {\n      return new Response(\n        JSON.stringify({ error: 'Hours configuration not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const venueHours = JSON.parse(existingData);\n    \n    if (venueHours.special && venueHours.special[date]) {\n      delete venueHours.special[date];\n      \n      venueHours.lastUpdated = new Date().toISOString();\n      venueHours.version = (venueHours.version || 0) + 1;\n\n      await env.CONFIG_KV.put(hoursKey, JSON.stringify(venueHours));\n    }\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        message: 'Special hours removed successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Remove special hours error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to remove special hours' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function setClosure(request, env) {\n  try {\n    const closureData = await request.json();\n    const { venue, date, reason, allDay } = closureData;\n\n    if (!venue || !date) {\n      return new Response(\n        JSON.stringify({ error: 'Venue and date required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const hoursKey = `hours:${venue}`;\n    const existingData = await env.CONFIG_KV.get(hoursKey);\n    \n    let venueHours;\n    if (existingData) {\n      venueHours = JSON.parse(existingData);\n    } else {\n      venueHours = getDefaultHours(venue);\n    }\n\n    // Add closure\n    if (!venueHours.closures) {\n      venueHours.closures = {};\n    }\n\n    venueHours.closures[date] = {\n      reason: reason || 'Closed',\n      allDay: allDay !== false, // default to true\n      created: new Date().toISOString()\n    };\n    \n    venueHours.lastUpdated = new Date().toISOString();\n    venueHours.version = (venueHours.version || 0) + 1;\n\n    await env.CONFIG_KV.put(hoursKey, JSON.stringify(venueHours));\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        closure: venueHours.closures[date],\n        message: 'Closure set successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Set closure error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to set closure' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function removeClosure(request, env) {\n  try {\n    const url = new URL(request.url);\n    const venue = url.searchParams.get('venue');\n    const date = url.searchParams.get('date');\n\n    if (!venue || !date) {\n      return new Response(\n        JSON.stringify({ error: 'Venue and date required' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const hoursKey = `hours:${venue}`;\n    const existingData = await env.CONFIG_KV.get(hoursKey);\n    \n    if (!existingData) {\n      return new Response(\n        JSON.stringify({ error: 'Hours configuration not found' }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const venueHours = JSON.parse(existingData);\n    \n    if (venueHours.closures && venueHours.closures[date]) {\n      delete venueHours.closures[date];\n      \n      venueHours.lastUpdated = new Date().toISOString();\n      venueHours.version = (venueHours.version || 0) + 1;\n\n      await env.CONFIG_KV.put(hoursKey, JSON.stringify(venueHours));\n    }\n\n    return new Response(\n      JSON.stringify({ \n        success: true, \n        message: 'Closure removed successfully' \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Remove closure error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to remove closure' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nfunction getDefaultHours(venue) {\n  return {\n    venue,\n    timezone: 'America/Chicago',\n    regular: {\n      monday: { open: '18:00', close: '02:00', closed: false },\n      tuesday: { open: '18:00', close: '02:00', closed: false },\n      wednesday: { open: '18:00', close: '02:00', closed: false },\n      thursday: { open: '18:00', close: '02:00', closed: false },\n      friday: { open: '18:00', close: '02:00', closed: false },\n      saturday: { open: '18:00', close: '02:00', closed: false },\n      sunday: { open: '18:00', close: '24:00', closed: false }\n    },\n    special: {},\n    closures: {},\n    created: new Date().toISOString(),\n    version: 1\n  };\n}\n\nfunction calculateHoursForDate(hours, dateString) {\n  const date = new Date(dateString);\n  const dayNames = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n  const dayName = dayNames[date.getDay()];\n\n  // Check for closure first\n  if (hours.closures && hours.closures[dateString]) {\n    return {\n      closed: true,\n      reason: hours.closures[dateString].reason,\n      type: 'closure'\n    };\n  }\n\n  // Check for special hours\n  if (hours.special && hours.special[dateString]) {\n    return {\n      closed: false,\n      open: hours.special[dateString].open,\n      close: hours.special[dateString].close,\n      reason: hours.special[dateString].reason,\n      type: 'special'\n    };\n  }\n\n  // Use regular hours\n  const dayHours = hours.regular[dayName];\n  if (dayHours.closed) {\n    return {\n      closed: true,\n      type: 'regular'\n    };\n  }\n\n  return {\n    closed: false,\n    open: dayHours.open,\n    close: dayHours.close,\n    type: 'regular'\n  };\n}\n\nfunction calculateHoursForRange(hours, days) {\n  const result = {};\n  const today = new Date();\n  \n  for (let i = 0; i < days; i++) {\n    const date = new Date(today);\n    date.setDate(today.getDate() + i);\n    const dateString = date.toISOString().split('T')[0];\n    \n    result[dateString] = calculateHoursForDate(hours, dateString);\n  }\n  \n  return result;\n}\n\nfunction isVenueOpen(dayHours) {\n  if (dayHours.closed) return false;\n  \n  const now = new Date();\n  const currentTime = now.toTimeString().slice(0, 5); // HH:MM format\n  \n  // Simple time comparison (doesn't handle overnight hours properly)\n  return currentTime >= dayHours.open && currentTime <= dayHours.close;\n}\n\nfunction getNextOpenTime(hours, fromDate) {\n  // This is a simplified version - a full implementation would handle timezones,\n  // overnight hours, and multiple days ahead\n  const date = new Date(fromDate);\n  const dayNames = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n  \n  for (let i = 0; i < 7; i++) {\n    const checkDate = new Date(date);\n    checkDate.setDate(date.getDate() + i);\n    const dateString = checkDate.toISOString().split('T')[0];\n    const dayName = dayNames[checkDate.getDay()];\n    \n    const dayHours = calculateHoursForDate(hours, dateString);\n    \n    if (!dayHours.closed) {\n      return {\n        date: dateString,\n        time: dayHours.open,\n        day: dayName\n      };\n    }\n  }\n  \n  return null;\n}\n", "/**\n * Admin Handler - Authentication and admin-specific functionality\n */\nexport async function handleAdmin(request, env, action) {\n  const url = new URL(request.url);\n  const method = request.method;\n\n  switch (action) {\n    case 'auth':\n      return handleAuth(request, env);\n    case 'dashboard':\n      return handleDashboard(request, env);\n    default:\n      return new Response(\n        JSON.stringify({ error: 'Invalid admin action' }), \n        { status: 400, headers: { 'Content-Type': 'application/json' } }\n      );\n  }\n}\n\nasync function handleAuth(request, env) {\n  const url = new URL(request.url);\n  const path = url.pathname;\n  const method = request.method;\n\n  if (path.includes('/login') && method === 'POST') {\n    return handleLogin(request, env);\n  } else if (path.includes('/logout') && method === 'POST') {\n    return handleLogout(request, env);\n  } else if (path.includes('/check') && method === 'GET') {\n    return handleAuthCheck(request, env);\n  }\n\n  return new Response(\n    JSON.stringify({ error: 'Invalid auth endpoint' }), \n    { status: 400, headers: { 'Content-Type': 'application/json' } }\n  );\n}\n\nasync function handleLogin(request, env) {\n  try {\n    const body = await request.json();\n    const { username, password } = body;\n\n    // For now, use simple hardcoded credentials\n    // In production, this should use proper hashing and database\n    const validUsername = env.ADMIN_USERNAME || 'admin';\n    const validPassword = env.ADMIN_PASSWORD || 'farewell2025';\n\n    if (username === validUsername && password === validPassword) {\n      // Generate a simple session token\n      const sessionToken = generateSessionToken();\n      \n      // Store session in KV (expires in 24 hours)\n      const sessionKey = `session:${sessionToken}`;\n      await env.SESSIONS_KV?.put(sessionKey, JSON.stringify({\n        username,\n        created: Date.now(),\n        expires: Date.now() + (24 * 60 * 60 * 1000) // 24 hours\n      }), { expirationTtl: 24 * 60 * 60 }); // 24 hours\n\n      // Set session cookie\n      const response = new Response(\n        JSON.stringify({ success: true, message: 'Login successful' }), \n        { headers: { 'Content-Type': 'application/json' } }\n      );\n\n      response.headers.set('Set-Cookie', `session=${sessionToken}; HttpOnly; Secure; SameSite=Strict; Max-Age=${24 * 60 * 60}`);\n      \n      return response;\n    } else {\n      return new Response(\n        JSON.stringify({ error: 'Invalid credentials' }), \n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n  } catch (error) {\n    console.error('Login error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Login failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function handleLogout(request, env) {\n  try {\n    const sessionToken = getSessionTokenFromRequest(request);\n    \n    if (sessionToken) {\n      // Remove session from KV\n      const sessionKey = `session:${sessionToken}`;\n      await env.SESSIONS_KV?.delete(sessionKey);\n    }\n\n    const response = new Response(\n      JSON.stringify({ success: true, message: 'Logout successful' }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n    // Clear session cookie\n    response.headers.set('Set-Cookie', 'session=; HttpOnly; Secure; SameSite=Strict; Max-Age=0');\n    \n    return response;\n\n  } catch (error) {\n    console.error('Logout error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Logout failed' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function handleAuthCheck(request, env) {\n  try {\n    const sessionToken = getSessionTokenFromRequest(request);\n    \n    if (!sessionToken) {\n      return new Response(\n        JSON.stringify({ authenticated: false }), \n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    // Check session in KV\n    const sessionKey = `session:${sessionToken}`;\n    const sessionData = await env.SESSIONS_KV?.get(sessionKey);\n    \n    if (!sessionData) {\n      return new Response(\n        JSON.stringify({ authenticated: false }), \n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    const session = JSON.parse(sessionData);\n    \n    // Check if session is expired\n    if (session.expires < Date.now()) {\n      await env.SESSIONS_KV?.delete(sessionKey);\n      return new Response(\n        JSON.stringify({ authenticated: false }), \n        { status: 401, headers: { 'Content-Type': 'application/json' } }\n      );\n    }\n\n    return new Response(\n      JSON.stringify({ \n        authenticated: true, \n        user: { username: session.username } \n      }), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Auth check error:', error);\n    return new Response(\n      JSON.stringify({ authenticated: false }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\nasync function handleDashboard(request, env) {\n  // Dashboard stats and info\n  try {\n    const stats = {\n      totalEvents: 0,\n      upcomingEvents: 0,\n      totalFlyers: 0,\n      recentActivity: []\n    };\n\n    // Get event stats if available\n    try {\n      const eventsData = await env.EVENTS_KV?.get('events:all');\n      if (eventsData) {\n        const events = JSON.parse(eventsData);\n        stats.totalEvents = events.length;\n        stats.upcomingEvents = events.filter(e => new Date(e.date) > new Date()).length;\n      }\n    } catch (error) {\n      console.error('Error loading event stats:', error);\n    }\n\n    return new Response(\n      JSON.stringify(stats), \n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n  } catch (error) {\n    console.error('Dashboard error:', error);\n    return new Response(\n      JSON.stringify({ error: 'Failed to load dashboard data' }), \n      { status: 500, headers: { 'Content-Type': 'application/json' } }\n    );\n  }\n}\n\n// Utility functions\nfunction generateSessionToken() {\n  // Simple session token generation\n  // In production, use a more secure method\n  return Math.random().toString(36).substring(2) + Date.now().toString(36);\n}\n\nfunction getSessionTokenFromRequest(request) {\n  const cookieHeader = request.headers.get('Cookie');\n  if (!cookieHeader) return null;\n\n  const cookies = cookieHeader.split(';').reduce((acc, cookie) => {\n    const [key, value] = cookie.trim().split('=');\n    acc[key] = value;\n    return acc;\n  }, {});\n\n  return cookies.session || null;\n}\n", "/**\n * Data Migration Handler\n * \n * Comprehensive migration handler that inspects and migrates data from all possible sources:\n * - KV namespaces (legacy and new)\n * - D1 databases \n * - R2 buckets\n */\n\n/**\n * Handle migration requests\n */\nexport async function handleMigration(request, env) {\n  const url = new URL(request.url);\n  const action = url.searchParams.get('action');\n  \n  try {\n    switch (action) {\n      case 'inspect':\n        return await inspectAllDataSources(env);\n      case 'inspect-kv':\n        return await inspectKVNamespaces(env);\n      case 'inspect-d1':\n        return await inspectD1Databases(env);\n      case 'inspect-r2':\n        return await inspectR2Buckets(env);\n      case 'migrate-blog':\n        return await migrateBlogData(env);\n      case 'migrate-events':\n        return await migrateEventData(env);\n      case 'migrate-gallery':\n        return await migrateGalleryData(env);\n      case 'copy-r2':\n        return await copyR2Data(env);\n      default:\n        return new Response(JSON.stringify({\n          error: 'Invalid action',\n          availableActions: [\n            'inspect', 'inspect-kv', 'inspect-d1', 'inspect-r2',\n            'migrate-blog', 'migrate-events', 'migrate-gallery', 'copy-r2'\n          ]\n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n    }\n  } catch (error) {\n    console.error('Migration error:', error);\n    return new Response(JSON.stringify({\n      error: 'Migration failed',\n      details: error.message,\n      stack: error.stack\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n/**\n * Comprehensive inspection of all data sources\n */\nasync function inspectAllDataSources(env) {\n  const results = {\n    timestamp: new Date().toISOString(),\n    kvNamespaces: {},\n    d1Databases: {},\n    r2Buckets: {},\n    summary: {}\n  };\n\n  // Inspect all KV namespaces\n  const kvResults = await inspectKVNamespaces(env);\n  const kvData = await kvResults.json();\n  results.kvNamespaces = kvData.kvNamespaces;\n\n  // Inspect all D1 databases\n  const d1Results = await inspectD1Databases(env);\n  const d1Data = await d1Results.json();\n  results.d1Databases = d1Data.d1Databases;\n\n  // Inspect all R2 buckets\n  const r2Results = await inspectR2Buckets(env);\n  const r2Data = await r2Results.json();\n  results.r2Buckets = r2Data.r2Buckets;\n\n  // Generate summary\n  results.summary = {\n    kvNamespacesFound: Object.keys(results.kvNamespaces).length,\n    d1DatabasesFound: Object.keys(results.d1Databases).length,\n    r2BucketsFound: Object.keys(results.r2Buckets).length,\n    totalDataSources: Object.keys(results.kvNamespaces).length + \n                     Object.keys(results.d1Databases).length + \n                     Object.keys(results.r2Buckets).length\n  };\n\n  return new Response(JSON.stringify(results, null, 2), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Inspect all KV namespaces\n */\nasync function inspectKVNamespaces(env) {\n  const kvNamespaces = {\n    // New unified namespaces\n    EVENTS_KV: env.EVENTS_KV,\n    SESSIONS_KV: env.SESSIONS_KV,\n    GALLERY_KV: env.GALLERY_KV,\n    BLOG_KV: env.BLOG_KV,\n    CONFIG_KV: env.CONFIG_KV,\n    \n    // Legacy namespaces\n    EVENTS_FAREWELL: env.EVENTS_FAREWELL,\n    EVENTS_HOWDY: env.EVENTS_HOWDY,\n    bl0wkv: env.bl0wkv,\n    fff_kv: env.fff_kv\n  };\n\n  const results = {\n    timestamp: new Date().toISOString(),\n    kvNamespaces: {}\n  };\n\n  for (const [name, namespace] of Object.entries(kvNamespaces)) {\n    if (!namespace) {\n      results.kvNamespaces[name] = {\n        available: false,\n        error: 'Namespace not bound'\n      };\n      continue;\n    }\n\n    try {\n      // Get list of keys (limit to 10 for inspection)\n      const keyList = await namespace.list({ limit: 10 });\n      const sampleKeys = keyList.keys || [];\n      \n      // Get sample data from first few keys\n      const sampleData = {};\n      for (let i = 0; i < Math.min(3, sampleKeys.length); i++) {\n        const key = sampleKeys[i];\n        try {\n          const value = await namespace.get(key.name);\n          if (value) {\n            // Try to parse as JSON, truncate if too long\n            let parsedValue = value;\n            try {\n              parsedValue = JSON.parse(value);\n              if (typeof parsedValue === 'object' && parsedValue !== null) {\n                parsedValue = JSON.stringify(parsedValue, null, 2).substring(0, 500) + '...';\n              }\n            } catch (e) {\n              // Keep as string, but truncate\n              parsedValue = value.substring(0, 500) + (value.length > 500 ? '...' : '');\n            }\n            sampleData[key.name] = parsedValue;\n          }\n        } catch (error) {\n          sampleData[key.name] = `Error reading value: ${error.message}`;\n        }\n      }\n\n      results.kvNamespaces[name] = {\n        available: true,\n        keyCount: keyList.keys?.length || 0,\n        sampleKeys: sampleKeys.map(k => ({ name: k.name, expiration: k.expiration })),\n        sampleData: sampleData\n      };\n    } catch (error) {\n      results.kvNamespaces[name] = {\n        available: false,\n        error: error.message\n      };\n    }\n  }\n\n  return new Response(JSON.stringify(results, null, 2), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Inspect all D1 databases\n */\nasync function inspectD1Databases(env) {\n  const databases = {\n    bl0wd1: env.bl0wd1,\n    farewell_list: env.farewell_list,\n    howdy_list: env.howdy_list,\n    fwhygal0r3_db: env.fwhygal0r3_db\n  };\n\n  const results = {\n    timestamp: new Date().toISOString(),\n    d1Databases: {}\n  };\n\n  for (const [name, db] of Object.entries(databases)) {\n    if (!db) {\n      results.d1Databases[name] = {\n        available: false,\n        error: 'Database not bound'\n      };\n      continue;\n    }\n\n    try {\n      // Try to get table information\n      const tablesQuery = await db.prepare(`\n        SELECT name FROM sqlite_master \n        WHERE type='table' AND name NOT LIKE 'sqlite_%'\n        ORDER BY name\n      `).all();\n\n      const tables = tablesQuery.results || [];\n      const tableInfo = {};\n\n      // Get row counts and sample data from each table\n      for (const table of tables.slice(0, 5)) { // Limit to 5 tables\n        try {\n          const countQuery = await db.prepare(`SELECT COUNT(*) as count FROM ${table.name}`).first();\n          const sampleQuery = await db.prepare(`SELECT * FROM ${table.name} LIMIT 3`).all();\n          \n          tableInfo[table.name] = {\n            rowCount: countQuery?.count || 0,\n            sampleRows: sampleQuery.results || []\n          };\n        } catch (error) {\n          tableInfo[table.name] = {\n            error: `Error accessing table: ${error.message}`\n          };\n        }\n      }\n\n      results.d1Databases[name] = {\n        available: true,\n        tableCount: tables.length,\n        tables: tables.map(t => t.name),\n        tableInfo: tableInfo\n      };\n    } catch (error) {\n      results.d1Databases[name] = {\n        available: false,\n        error: error.message\n      };\n    }\n  }\n\n  return new Response(JSON.stringify(results, null, 2), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Inspect all R2 buckets\n */\nasync function inspectR2Buckets(env) {\n  const buckets = {\n    R2_BUCKET: env.R2_BUCKET,\n    NEW_BUCKET: env.NEW_BUCKET\n  };\n\n  const results = {\n    timestamp: new Date().toISOString(),\n    r2Buckets: {}\n  };\n\n  for (const [name, bucket] of Object.entries(buckets)) {\n    if (!bucket) {\n      results.r2Buckets[name] = {\n        available: false,\n        error: 'Bucket not bound'\n      };\n      continue;\n    }\n\n    try {\n      // List objects (limit to 20 for inspection)\n      const objectList = await bucket.list({ limit: 20 });\n      const objects = objectList.objects || [];\n\n      results.r2Buckets[name] = {\n        available: true,\n        objectCount: objects.length,\n        truncated: objectList.truncated || false,\n        sampleObjects: objects.map(obj => ({\n          key: obj.key,\n          size: obj.size,\n          modified: obj.uploaded?.toISOString(),\n          etag: obj.etag\n        }))\n      };\n    } catch (error) {\n      results.r2Buckets[name] = {\n        available: false,\n        error: error.message\n      };\n    }\n  }\n\n  return new Response(JSON.stringify(results, null, 2), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Migrate blog data from legacy sources\n */\nasync function migrateBlogData(env) {\n  const results = {\n    timestamp: new Date().toISOString(),\n    migrated: 0,\n    errors: []\n  };\n\n  try {\n    // Migrate from bl0wkv (legacy blog KV)\n    if (env.bl0wkv && env.BLOG_KV) {\n      const keyList = await env.bl0wkv.list();\n      \n      for (const key of keyList.keys || []) {\n        try {\n          const value = await env.bl0wkv.get(key.name);\n          if (value) {\n            // Transform legacy format to new unified format\n            let blogData;\n            try {\n              blogData = JSON.parse(value);\n            } catch (e) {\n              blogData = { content: value, title: key.name };\n            }\n\n            const unifiedData = {\n              id: key.name,\n              title: blogData.title || key.name,\n              content: blogData.content || value,\n              author: blogData.author || 'admin',\n              published: blogData.published || true,\n              createdAt: blogData.createdAt || new Date().toISOString(),\n              updatedAt: new Date().toISOString(),\n              tags: blogData.tags || [],\n              venue: blogData.venue || 'both'\n            };\n\n            await env.BLOG_KV.put(`blog:${key.name}`, JSON.stringify(unifiedData));\n            results.migrated++;\n          }\n        } catch (error) {\n          results.errors.push(`Error migrating blog key ${key.name}: ${error.message}`);\n        }\n      }\n    }\n  } catch (error) {\n    results.errors.push(`Blog migration error: ${error.message}`);\n  }\n\n  return new Response(JSON.stringify(results), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Migrate event data from legacy sources\n */\nasync function migrateEventData(env) {\n  const results = {\n    timestamp: new Date().toISOString(),\n    migrated: 0,\n    errors: [],\n    venues: { farewell: 0, howdy: 0 }\n  };\n\n  try {\n    // Migrate from EVENTS_FAREWELL\n    if (env.EVENTS_FAREWELL && env.EVENTS_KV) {\n      const farewellKeys = await env.EVENTS_FAREWELL.list();\n      \n      for (const key of farewellKeys.keys || []) {\n        try {\n          const value = await env.EVENTS_FAREWELL.get(key.name);\n          if (value) {\n            let eventData;\n            try {\n              eventData = JSON.parse(value);\n            } catch (e) {\n              eventData = { content: value };\n            }\n\n            // Transform to unified format\n            const unifiedData = {\n              id: `farewell_${key.name}`,\n              venue: 'farewell',\n              title: eventData.title || 'Event',\n              description: eventData.description || eventData.content || '',\n              date: eventData.date || new Date().toISOString(),\n              time: eventData.time || '20:00',\n              price: eventData.price || null,\n              ticketLink: eventData.ticketLink || null,\n              imageUrl: eventData.imageUrl || null,\n              featured: eventData.featured || false,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            };\n\n            await env.EVENTS_KV.put(`event:farewell:${key.name}`, JSON.stringify(unifiedData));\n            results.venues.farewell++;\n            results.migrated++;\n          }\n        } catch (error) {\n          results.errors.push(`Error migrating farewell event ${key.name}: ${error.message}`);\n        }\n      }\n    }\n\n    // Migrate from EVENTS_HOWDY\n    if (env.EVENTS_HOWDY && env.EVENTS_KV) {\n      const howdyKeys = await env.EVENTS_HOWDY.list();\n      \n      for (const key of howdyKeys.keys || []) {\n        try {\n          const value = await env.EVENTS_HOWDY.get(key.name);\n          if (value) {\n            let eventData;\n            try {\n              eventData = JSON.parse(value);\n            } catch (e) {\n              eventData = { content: value };\n            }\n\n            // Transform to unified format\n            const unifiedData = {\n              id: `howdy_${key.name}`,\n              venue: 'howdy',\n              title: eventData.title || 'Event',\n              description: eventData.description || eventData.content || '',\n              date: eventData.date || new Date().toISOString(),\n              time: eventData.time || '20:00',\n              price: eventData.price || null,\n              ticketLink: eventData.ticketLink || null,\n              imageUrl: eventData.imageUrl || null,\n              featured: eventData.featured || false,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            };\n\n            await env.EVENTS_KV.put(`event:howdy:${key.name}`, JSON.stringify(unifiedData));\n            results.venues.howdy++;\n            results.migrated++;\n          }\n        } catch (error) {\n          results.errors.push(`Error migrating howdy event ${key.name}: ${error.message}`);\n        }\n      }\n    }\n  } catch (error) {\n    results.errors.push(`Event migration error: ${error.message}`);\n  }\n\n  return new Response(JSON.stringify(results), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Migrate gallery/flyer data from legacy sources\n */\nasync function migrateGalleryData(env) {\n  const results = {\n    timestamp: new Date().toISOString(),\n    migrated: 0,\n    errors: []\n  };\n\n  try {\n    // Migrate from fff_kv (legacy gallery KV)\n    if (env.fff_kv && env.GALLERY_KV) {\n      const keyList = await env.fff_kv.list();\n      \n      for (const key of keyList.keys || []) {\n        try {\n          const value = await env.fff_kv.get(key.name);\n          if (value) {\n            let galleryData;\n            try {\n              galleryData = JSON.parse(value);\n            } catch (e) {\n              galleryData = { content: value };\n            }\n\n            // Transform to unified format\n            const unifiedData = {\n              id: key.name,\n              venue: key.name.includes('howdy') ? 'howdy' : 'farewell',\n              title: galleryData.title || 'Gallery Item',\n              description: galleryData.description || '',\n              imageUrl: galleryData.imageUrl || galleryData.url || '',\n              thumbnailUrl: galleryData.thumbnailUrl || null,\n              category: galleryData.category || 'flyer',\n              featured: galleryData.featured || false,\n              createdAt: galleryData.createdAt || new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            };\n\n            await env.GALLERY_KV.put(`gallery:${key.name}`, JSON.stringify(unifiedData));\n            results.migrated++;\n          }\n        } catch (error) {\n          results.errors.push(`Error migrating gallery key ${key.name}: ${error.message}`);\n        }\n      }\n    }\n  } catch (error) {\n    results.errors.push(`Gallery migration error: ${error.message}`);\n  }\n\n  return new Response(JSON.stringify(results), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n\n/**\n * Copy R2 objects from legacy bucket to new bucket\n */\nasync function copyR2Data(env) {\n  const results = {\n    timestamp: new Date().toISOString(),\n    copied: 0,\n    errors: [],\n    note: 'Copying from existing production bucket (fyg410r3) to new backup bucket (unified-assets-dev)'\n  };\n\n  try {\n    if (env.R2_BUCKET && env.NEW_BUCKET) {\n      // List all objects in the source bucket\n      let truncated = true;\n      let cursor;\n      \n      while (truncated) {\n        const listResult = await env.R2_BUCKET.list({ \n          limit: 100,\n          cursor: cursor\n        });\n        \n        for (const object of listResult.objects || []) {\n          try {\n            // Get the object from source bucket\n            const sourceObject = await env.R2_BUCKET.get(object.key);\n            if (sourceObject) {\n              // Copy to destination bucket\n              await env.NEW_BUCKET.put(object.key, sourceObject.body, {\n                httpMetadata: sourceObject.httpMetadata,\n                customMetadata: sourceObject.customMetadata\n              });\n              results.copied++;\n            }\n          } catch (error) {\n            results.errors.push(`Error copying object ${object.key}: ${error.message}`);\n          }\n        }\n        \n        truncated = listResult.truncated;\n        cursor = listResult.cursor;\n      }\n    }\n  } catch (error) {\n    results.errors.push(`R2 copy error: ${error.message}`);\n  }\n\n  return new Response(JSON.stringify(results), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n}\n", "/**\n * Farewell/Howdy Unified Admin Backend\n * \n * This Cloudflare Worker consolidates all backend functionality:\n * - Event management and listing\n * - Gallery/flyer management\n * - Newsletter/blog management\n * - Menu management\n * - Operating hours management\n * - Admin authentication\n */\n\nimport { handleCORS } from './middleware/cors.js';\nimport { authenticate } from './middleware/auth.js';\nimport { EventsHandler } from './handlers/events.js';\nimport { handleGallery } from './handlers/gallery.js';\nimport { handleBlog } from './handlers/blog.js';\nimport { handleMenu } from './handlers/menu.js';\nimport { handleHours } from './handlers/hours.js';\nimport { handleAdmin } from './handlers/admin.js';\nimport { handleMigration } from './handlers/migration.js';\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const path = url.pathname;\n    const method = request.method;\n\n    // Handle CORS preflight\n    if (method === 'OPTIONS') {\n      return handleCORS();\n    }\n\n    try {\n      // Public endpoints (no auth required)\n      if (path.startsWith('/api/events/list')) {\n        const eventsHandler = new EventsHandler(env);\n        const response = await eventsHandler.handleRequest(request);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/blog/public')) {\n        const response = await handleBlog(request, env, 'public');\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/menu/public')) {\n        const response = await handleMenu(request, env, 'public');\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/hours/public')) {\n        const response = await handleHours(request, env, 'public');\n        return handleCORS(response);\n      }\n\n      // Auth endpoints\n      if (path.startsWith('/api/auth')) {\n        const response = await handleAdmin(request, env, 'auth');\n        return handleCORS(response);\n      }\n\n      // Admin dashboard (HTML)\n      if (path === '/' || path === '/dashboard' || path === '/admin') {\n        // Check if user is authenticated for dashboard access\n        const authResult = await authenticate(request, env);\n        if (!authResult.success) {\n          // Redirect to login if not authenticated\n          return Response.redirect('/login', 302);\n        }\n        \n        // Serve admin dashboard HTML\n        try {\n          // In development, we'll inline the HTML content\n          // In production, this would be served from KV or R2\n          const dashboardHTML = await fetch('https://raw.githubusercontent.com/thuruht/fwhyadmin/main/src/admin-dashboard.html');\n          if (dashboardHTML.ok) {\n            const html = await dashboardHTML.text();\n            return new Response(html, {\n              headers: { 'Content-Type': 'text/html' }\n            });\n          }\n        } catch (error) {\n          console.error('Error loading dashboard:', error);\n        }\n        \n        // Fallback basic dashboard\n        return new Response(`\n          <!DOCTYPE html>\n          <html>\n          <head>\n            <title>Admin Dashboard</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <style>\n              body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }\n              .container { max-width: 1200px; margin: 0 auto; }\n              .header { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\n              .card { background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }\n              .btn { padding: 10px 20px; background: #007cba; color: white; border: none; border-radius: 4px; cursor: pointer; text-decoration: none; display: inline-block; }\n            </style>\n          </head>\n          <body>\n            <div class=\"container\">\n              <div class=\"header\">\n                <h1>Farewell/Howdy Admin Dashboard</h1>\n                <p>Welcome to the unified admin backend</p>\n              </div>\n              <div class=\"card\">\n                <h2>Quick Actions</h2>\n                <a href=\"#\" class=\"btn\">Manage Events</a>\n                <a href=\"#\" class=\"btn\">Upload Flyers</a>\n                <a href=\"#\" class=\"btn\">Edit Menu</a>\n                <a href=\"#\" class=\"btn\">Manage Hours</a>\n              </div>\n              <div class=\"card\">\n                <h2>System Status</h2>\n                <p>Backend worker is running successfully.</p>\n                <p>API endpoints are ready for frontend integration.</p>\n              </div>\n            </div>\n          </body>\n          </html>\n        `, {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      }\n\n      // Login page\n      if (path === '/login') {\n        // Serve login page (create if needed)\n        return new Response(`\n          <!DOCTYPE html>\n          <html>\n          <head>\n            <title>Admin Login</title>\n            <style>\n              body { font-family: Arial, sans-serif; display: flex; justify-content: center; align-items: center; height: 100vh; margin: 0; background: #f5f5f5; }\n              .login-form { background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); width: 300px; }\n              .login-form h2 { margin-bottom: 20px; text-align: center; color: #333; }\n              .form-group { margin-bottom: 15px; }\n              .form-group label { display: block; margin-bottom: 5px; font-weight: bold; }\n              .form-group input { width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 4px; box-sizing: border-box; }\n              .btn { width: 100%; padding: 10px; background: #007cba; color: white; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; }\n              .btn:hover { background: #005a87; }\n              .error { color: #dc3545; margin-top: 10px; text-align: center; }\n            </style>\n          </head>\n          <body>\n            <div class=\"login-form\">\n              <h2>Admin Login</h2>\n              <form id=\"loginForm\">\n                <div class=\"form-group\">\n                  <label>Username</label>\n                  <input type=\"text\" id=\"username\" required>\n                </div>\n                <div class=\"form-group\">\n                  <label>Password</label>\n                  <input type=\"password\" id=\"password\" required>\n                </div>\n                <button type=\"submit\" class=\"btn\">Login</button>\n                <div id=\"error\" class=\"error\" style=\"display: none;\"></div>\n              </form>\n            </div>\n            <script>\n              document.getElementById('loginForm').addEventListener('submit', async function(e) {\n                e.preventDefault();\n                const username = document.getElementById('username').value;\n                const password = document.getElementById('password').value;\n                const errorDiv = document.getElementById('error');\n                \n                try {\n                  const response = await fetch('/api/auth/login', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ username, password })\n                  });\n                  \n                  if (response.ok) {\n                    window.location.href = '/dashboard';\n                  } else {\n                    const error = await response.json();\n                    errorDiv.textContent = error.message || 'Login failed';\n                    errorDiv.style.display = 'block';\n                  }\n                } catch (error) {\n                  errorDiv.textContent = 'Login failed. Please try again.';\n                  errorDiv.style.display = 'block';\n                }\n              });\n            </script>\n          </body>\n          </html>\n        `, {\n          headers: { 'Content-Type': 'text/html' }\n        });\n      }\n\n      // Admin endpoints (auth required)\n      const authResult = await authenticate(request, env);\n      if (!authResult.success) {\n        return handleCORS(new Response(\n          JSON.stringify({ error: 'Unauthorized' }), \n          { status: 401, headers: { 'Content-Type': 'application/json' } }\n        ));\n      }\n\n      // Route authenticated requests\n      if (path.startsWith('/api/events')) {\n        const eventsHandler = new EventsHandler(env);\n        const response = await eventsHandler.handleRequest(request);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/gallery')) {\n        const action = path.split('/')[3] || 'list';\n        const response = await handleGallery(request, env, action);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/blog')) {\n        const action = path.split('/')[3] || 'list';\n        const response = await handleBlog(request, env, action);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/menu')) {\n        const action = path.split('/')[3] || 'get';\n        const response = await handleMenu(request, env, action);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/hours')) {\n        const action = path.split('/')[3] || 'get';\n        const response = await handleHours(request, env, action);\n        return handleCORS(response);\n      }\n\n      if (path.startsWith('/api/admin')) {\n        const action = path.split('/')[3] || 'dashboard';\n        const response = await handleAdmin(request, env, action);\n        return handleCORS(response);\n      }\n\n      // Migration endpoint (admin auth required)\n      if (path.startsWith('/api/migrate')) {\n        const authResult = await authenticate(request, env); // Re-enable auth\n        if (!authResult.success) {\n          return handleCORS(new Response(JSON.stringify({ error: 'Unauthorized' }), { \n            status: 401, \n            headers: { 'Content-Type': 'application/json' } \n          }));\n        }\n        const response = await handleMigration(request, env);\n        return handleCORS(response);\n      }\n\n      // Default 404\n      return handleCORS(new Response(\n        JSON.stringify({ error: 'Not Found', requestedPath: path }), \n        { status: 404, headers: { 'Content-Type': 'application/json' } }\n      ));\n\n    } catch (error) {\n      console.error('Worker error:', error);\n      // Also add path to error responses for more context\n      return handleCORS(new Response(\n        JSON.stringify({ error: 'Internal Server Error', details: error.message, requestedPath: path }), \n        { status: 500, headers: { 'Content-Type': 'application/json' } }\n      ));\n    }\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/src/index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/usr/local/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/usr/local/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/src/index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/.wrangler/tmp/bundle-WQEatu/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/usr/local/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/.wrangler/tmp/bundle-WQEatu/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/jeltu/Desktop/fnow/admin-worker/fwhyadmin/.wrangler/tmp/bundle-WQEatu/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["getSessionTokenFromRequest", "authResult"]
}
